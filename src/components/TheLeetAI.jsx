import { motion, AnimatePresence } from 'framer-motion';
import { useState, useEffect } from 'react';
import "react-vertical-timeline-component/style.min.css";
import { styles } from "../styles"; 
import { SectionWrapper } from "../hoc";
import { textVariant } from "../utils/motion";
import ReactMarkdown from 'react-markdown';


import {
  tla,
  tla_1,
  tla_2,
  tla_3,
  tla_4,
  tla_5,
  tla_6,
  tla_7,
  github_icon,
  instagram_icon,
  linkedin_icon,
} from '../assets';

const imageList = [
  tla_1,
  tla_2,
  tla_3,
  tla_4,
  tla_5,
  tla_6,
  tla_7,

];


const TheLeetAI = () => {
  const [currentImage, setCurrentImage] = useState(0);
  const [text, setText] = useState("");
  const fullText = `
  I created this Persona To help me push my machine learning Skills and share them on the way.

  I'm the author of the images you see on the right, they were generated by different machine learning models.
  
  I'll be sharing in the near future some interesting projects that will be open-source, 
  so make sure to give a start on follow and give a star ⭐ on [github](https://www.github.com/The-Leet-AI)

  You can also follow my Social Medial on the following links:
  ![side-by-side](${github_icon}) ![side-by-side](${instagram_icon}) ![side-by-side](${linkedin_icon})
  `;
  const components = {
    // Custom component for paragraphs
    p: ({ node, children }) => {
      const childArray = Array.isArray(children) ? children : [children];
      if (childArray.some(child => child.props && child.props.alt === 'side-by-side')) {
        return (
          <div>
            <p>{children.filter(child => !(child.props && child.props.alt === 'side-by-side'))}</p>
            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-start' }}>
              {children.filter(child => child.props && child.props.alt === 'side-by-side')}
            </div>
          </div>
        );
      }
      return <p>{children}</p>;
    },
    // Custom component for images
    img: ({ node, alt, src }) => {
      const linkMap = {
        'side-by-side': {
          'github': 'https://www.github.com/The-Leet-AI',
          'instagram': 'https://www.instagram.com/the.leet.ai/',
          'linkedin': 'https://www.linkedin.com/company/the-leet-ai/',
        }
      };
      if (alt === 'side-by-side') {
        let platform = '';
        if (src.includes('github')) {
          platform = 'github';
        } else if (src.includes('instagram')) {
          platform = 'instagram';
        } else if (src.includes('linkedin')) {
          platform = 'linkedin';
        }
        return (
          <a href={linkMap[alt][platform]} target="_blank" rel="noopener noreferrer">
            <img src={src} alt={alt} style={{ width: '50px', height: '50px', marginRight: '10px' }} />
          </a>
        );
      }
      return <img src={src} alt={alt} />;
    },
    a: ({ node, children, ...props }) => {
      return (
        <a {...props} style={{ textDecoration: 'underline', fontWeight: 'bold' }}>
          {children}
        </a>
      );
    },
  };

  // useEffect(() => {
  //   let index = 0;
  //   const timer = setInterval(() => {
  //     setText((prevText) => prevText + fullText[index]);
  //     index++;
  //     if (index >= fullText.length-1) {
  //       clearInterval(timer);
  //     }
  //   }, 10); // Speed of typing

  //   return () => clearInterval(timer);
  // }, []);

  // Instant rendering
  useEffect(() => {
    setText(fullText);
  }, []);

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentImage((prev) => (prev + 1) % imageList.length);
    }, 5000); // Change every 2 seconds

    return () => clearInterval(timer);
  }, []);

  const handleNext = () => {
    setCurrentImage((prev) => (prev + 1) % imageList.length);
  };

  const handlePrev = () => {
    setCurrentImage((prev) => (prev - 1 + imageList.length) % imageList.length);
  };

  return (
    <>
      <motion.div variants={textVariant()}>
  <p className={`${styles.sectionSubText} text-center`}>
    My AI Persona
  </p>
  <h2 className={`flex items-center justify-center ${styles.sectionHeadText} text-center`}>
    <span>The Leet AI</span>
    <img src={tla} alt="icon" className="ml-2 w-16 h-16" />
  </h2>
</motion.div>
<div className='mt-20 flex flex-col md:flex-row space-y-8 md:space-y-0 md:space-x-8'>
  <motion.div className='flex-1'>
    <div className='bg-[#1D1836] p-8 rounded-[16px]'>
      <ReactMarkdown components={components}>{text}</ReactMarkdown>
    </div>
  </motion.div>
  <motion.div className='flex-1 flex flex-col items-center'>
    <button onClick={handlePrev} className="z-10 mb-5 md:mb-0 md:mr-5">Previous</button>
    <div className='image-container relative'>
      <AnimatePresence exitBeforeEnter>
        <motion.img
          key={currentImage}
          src={imageList[currentImage]}
          initial={{ opacity: 0, x: 50 }}
          animate={{ opacity: 1, x: 0 }}
          exit={{ opacity: 0, x: -50 }}
          transition={{ duration: 0.5 }}
          className='image rounded-lg h-[300px] object-cover shadow-cyanGlow'  
        />
      </AnimatePresence>
    </div>
    <button onClick={handleNext} className="z-10 mt-5 md:mt-0 md:ml-5">Next</button>
  </motion.div>
</div>
    </>
  );
};

export default SectionWrapper(TheLeetAI, "the-leet-ai");